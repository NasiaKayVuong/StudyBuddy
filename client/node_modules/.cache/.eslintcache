[{"/Users/nasiavuong/newCode/studybuddy/client/src/index.js":"1","/Users/nasiavuong/newCode/studybuddy/client/src/App.js":"2","/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Navbar.js":"3","/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Landing.js":"4","/Users/nasiavuong/newCode/studybuddy/client/src/components/auth/Login.js":"5","/Users/nasiavuong/newCode/studybuddy/client/src/components/auth/Register.js":"6","/Users/nasiavuong/newCode/studybuddy/client/src/store.js":"7","/Users/nasiavuong/newCode/studybuddy/client/src/reducers/index.js":"8","/Users/nasiavuong/newCode/studybuddy/client/src/reducers/alert.js":"9","/Users/nasiavuong/newCode/studybuddy/client/src/actions/types.js":"10","/Users/nasiavuong/newCode/studybuddy/client/src/actions/alert.js":"11","/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Alert.js":"12","/Users/nasiavuong/newCode/studybuddy/client/src/actions/auth.js":"13","/Users/nasiavuong/newCode/studybuddy/client/src/reducers/auth.js":"14","/Users/nasiavuong/newCode/studybuddy/client/src/utils/setAuthToken.js":"15","/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Dashboard.js":"16","/Users/nasiavuong/newCode/studybuddy/client/src/components/routing/PrivateRoute.js":"17","/Users/nasiavuong/newCode/studybuddy/client/src/reducers/profile.js":"18","/Users/nasiavuong/newCode/studybuddy/client/src/actions/profile.js":"19","/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Spinner.js":"20","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/CreateProfile.js":"21","/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/DashboardActions.js":"22","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/EditProfile.js":"23","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/AddExperience.js":"24","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/AddEducation.js":"25","/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Experience.js":"26","/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Education.js":"27","/Users/nasiavuong/newCode/studybuddy/client/src/components/profiles/Profiles.js":"28","/Users/nasiavuong/newCode/studybuddy/client/src/components/profiles/ProfileItem.js":"29","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/Profile.js":"30","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileTop.js":"31","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileAbout.js":"32","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileExperience.js":"33","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileEducation.js":"34","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileGithub.js":"35"},{"size":157,"mtime":1629145695732,"results":"36","hashOfConfig":"37"},{"size":2500,"mtime":1629585872147,"results":"38","hashOfConfig":"37"},{"size":1391,"mtime":1629583119769,"results":"39","hashOfConfig":"37"},{"size":1122,"mtime":1629488409270,"results":"40","hashOfConfig":"37"},{"size":1915,"mtime":1629406931976,"results":"41","hashOfConfig":"37"},{"size":2900,"mtime":1629407035990,"results":"42","hashOfConfig":"37"},{"size":383,"mtime":1629151510886,"results":"43","hashOfConfig":"37"},{"size":196,"mtime":1629484356174,"results":"44","hashOfConfig":"37"},{"size":402,"mtime":1629402609309,"results":"45","hashOfConfig":"37"},{"size":700,"mtime":1629581694597,"results":"46","hashOfConfig":"37"},{"size":363,"mtime":1629154901318,"results":"47","hashOfConfig":"37"},{"size":441,"mtime":1629154567120,"results":"48","hashOfConfig":"37"},{"size":2041,"mtime":1629491395868,"results":"49","hashOfConfig":"37"},{"size":1092,"mtime":1629580175202,"results":"50","hashOfConfig":"37"},{"size":242,"mtime":1629405509410,"results":"51","hashOfConfig":"37"},{"size":1943,"mtime":1629580742600,"results":"52","hashOfConfig":"37"},{"size":631,"mtime":1629484009315,"results":"53","hashOfConfig":"37"},{"size":1029,"mtime":1629581753412,"results":"54","hashOfConfig":"37"},{"size":5546,"mtime":1629585186646,"results":"55","hashOfConfig":"37"},{"size":284,"mtime":1629488728248,"results":"56","hashOfConfig":"37"},{"size":6790,"mtime":1629571964069,"results":"57","hashOfConfig":"37"},{"size":643,"mtime":1629738301389,"results":"58","hashOfConfig":"37"},{"size":8045,"mtime":1629571970271,"results":"59","hashOfConfig":"37"},{"size":3448,"mtime":1629739156571,"results":"60","hashOfConfig":"37"},{"size":3473,"mtime":1629739158604,"results":"61","hashOfConfig":"37"},{"size":1388,"mtime":1629580356987,"results":"62","hashOfConfig":"37"},{"size":1374,"mtime":1629580495762,"results":"63","hashOfConfig":"37"},{"size":1288,"mtime":1629737084770,"results":"64","hashOfConfig":"37"},{"size":976,"mtime":1629584806734,"results":"65","hashOfConfig":"37"},{"size":2915,"mtime":1629747223060,"results":"66","hashOfConfig":"37"},{"size":1837,"mtime":1629739185806,"results":"67","hashOfConfig":"37"},{"size":783,"mtime":1629740809548,"results":"68","hashOfConfig":"37"},{"size":656,"mtime":1629746733721,"results":"69","hashOfConfig":"37"},{"size":725,"mtime":1629746711191,"results":"70","hashOfConfig":"37"},{"size":694,"mtime":1629749300682,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1b0x0so",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},"/Users/nasiavuong/newCode/studybuddy/client/src/index.js",[],["146","147"],"/Users/nasiavuong/newCode/studybuddy/client/src/App.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Navbar.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Landing.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/auth/Login.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/auth/Register.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/store.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/reducers/index.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/reducers/alert.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/actions/types.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/actions/alert.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Alert.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/actions/auth.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/reducers/auth.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/utils/setAuthToken.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Dashboard.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/routing/PrivateRoute.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/reducers/profile.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/actions/profile.js",["148","149","150"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_PROFILE,\n  });\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profile by id\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile =\n  (formData, history, edit = false) =>\n  async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const res = await axios.post('/api/profile', formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n      if (!edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  };\n\n// Add Expirience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/experience', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/education', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n\n      dispatch({\n        type: ACCOUNT_DELETED,\n      });\n\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","/Users/nasiavuong/newCode/studybuddy/client/src/components/layout/Spinner.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/CreateProfile.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/DashboardActions.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/EditProfile.js",["151"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/AddExperience.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile-forms/AddEducation.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Experience.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/dashboard/Education.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profiles/Profiles.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profiles/ProfileItem.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/Profile.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileTop.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileAbout.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileExperience.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileEducation.js",[],"/Users/nasiavuong/newCode/studybuddy/client/src/components/profile/ProfileGithub.js",["152"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return <div></div>;\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":89,"column":13,"nodeType":"159","messageId":"160","endLine":89,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":125,"column":11,"nodeType":"159","messageId":"160","endLine":125,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":156,"column":11,"nodeType":"159","messageId":"160","endLine":156,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":48,"column":6,"nodeType":"163","endLine":48,"endColumn":34,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"165","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["168"],"'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"171","text":"172"},[1653,1681],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]